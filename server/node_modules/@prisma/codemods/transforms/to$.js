"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const methods = [
    "transaction",
    "connect",
    "disconnect",
    "executeRaw",
    "on",
    "use",
    "queryRaw",
];
function transform(file, api, options) {
    const j = api.jscodeshift;
    // Convert the entire file source into a collection of nodes paths.
    const root = j(file.source);
    const identifiers = root.find(j.Identifier);
    identifiers
        .filter((idPath) => {
        var _a, _b, _c, _d, _e, _f;
        // This finds prisma.x.findOne
        if (methods.includes(idPath.value.name) &&
            ((_c = (_b = (_a = idPath === null || idPath === void 0 ? void 0 : idPath.parent) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.object) === null || _c === void 0 ? void 0 : _c.name) === "prisma" &&
            ((_f = (_e = (_d = idPath === null || idPath === void 0 ? void 0 : idPath.parent) === null || _d === void 0 ? void 0 : _d.parent) === null || _e === void 0 ? void 0 : _e.value) === null || _f === void 0 ? void 0 : _f.type) === 'CallExpression') {
            return true;
        }
        return false;
    })
        .replaceWith((p) => Object.assign({}, p.node, {
        name: `$${p.node.name}`,
    }));
    return root.toSource();
}
exports.default = transform;
//# sourceMappingURL=to$.js.map