"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function transform(file, api, options) {
    const j = api.jscodeshift;
    // Convert the entire file source into a collection of nodes paths.
    const root = j(file.source);
    const identifiers = root.find(j.Identifier);
    identifiers
        .filter((idPath) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        // This finds prisma.x.findOne
        if ("findOne" === idPath.value.name && (((_d = (_c = (_b = (_a = idPath === null || idPath === void 0 ? void 0 : idPath.parent) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.object) === null || _c === void 0 ? void 0 : _c.object) === null || _d === void 0 ? void 0 : _d.name) === 'prisma' || ((_j = (_h = (_g = (_f = (_e = idPath === null || idPath === void 0 ? void 0 : idPath.parent) === null || _e === void 0 ? void 0 : _e.value) === null || _f === void 0 ? void 0 : _f.object) === null || _g === void 0 ? void 0 : _g.object) === null || _h === void 0 ? void 0 : _h.property) === null || _j === void 0 ? void 0 : _j.name) === 'prisma')) {
            return true;
        }
        return false;
    })
        .replaceWith((p) => Object.assign({}, p.node, {
        name: `findUnique`,
    }));
    return root.toSource();
}
exports.default = transform;
//# sourceMappingURL=findUnique.js.map