{"remainingRequest":"/Users/almikk/harvestr_project_graphQL/client/web/node_modules/babel-loader/lib/index.js!/Users/almikk/harvestr_project_graphQL/client/web/src/composables/useMessages.js","dependencies":[{"path":"/Users/almikk/harvestr_project_graphQL/client/web/src/composables/useMessages.js","mtime":1607954828482},{"path":"/Users/almikk/harvestr_project_graphQL/client/web/node_modules/cache-loader/dist/cjs.js","mtime":1607955313922},{"path":"/Users/almikk/harvestr_project_graphQL/client/web/node_modules/babel-loader/lib/index.js","mtime":1607955313916}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXNlUXVlcnksIHVzZVJlc3VsdCB9IGZyb20gIkB2dWUvYXBvbGxvLWNvbXBvc2FibGUiOwppbXBvcnQgbWVzc2FnZXNRdWVyeSBmcm9tICIuLi9ncmFwaHFsL3F1ZXJpZXMvbWVzc2FnZXMuZ3FsIjsKZXhwb3J0IHZhciB1c2VNZXNzYWdlc1F1ZXJ5ID0gZnVuY3Rpb24gdXNlTWVzc2FnZXNRdWVyeSgpIHsKICB2YXIgX3VzZVF1ZXJ5ID0gdXNlUXVlcnkobWVzc2FnZXNRdWVyeSksCiAgICAgIHJlc3VsdCA9IF91c2VRdWVyeS5yZXN1bHQsCiAgICAgIGxvYWRpbmcgPSBfdXNlUXVlcnkubG9hZGluZywKICAgICAgZXJyb3IgPSBfdXNlUXVlcnkuZXJyb3IsCiAgICAgIG9uUmVzdWx0ID0gX3VzZVF1ZXJ5Lm9uUmVzdWx0LAogICAgICBvbkVycm9yID0gX3VzZVF1ZXJ5Lm9uRXJyb3I7CgogIHZhciBtZXNzYWdlcyA9IHVzZVJlc3VsdChyZXN1bHQsIG51bGwsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICByZXR1cm4gZGF0YS5tZXNzYWdlczsKICB9KTsKICByZXR1cm4gewogICAgLy8gU3RhdGVzCiAgICBtZXNzYWdlczogbWVzc2FnZXMsCiAgICBsb2FkaW5nOiBsb2FkaW5nLAogICAgZXJyb3I6IGVycm9yLAogICAgLy8gRXZlbnQgaG9va3MKICAgIG9uUmVzdWx0OiBvblJlc3VsdCwKICAgIG9uRXJyb3I6IG9uRXJyb3IKICB9Owp9Ow=="},{"version":3,"sources":["/Users/almikk/harvestr_project_graphQL/client/web/src/composables/useMessages.js"],"names":["useQuery","useResult","messagesQuery","useMessagesQuery","result","loading","error","onResult","onError","messages","data"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,wBAApC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAW;AAAA,kBACYH,QAAQ,CAACE,aAAD,CADpB;AAAA,MAClCE,MADkC,aAClCA,MADkC;AAAA,MAC1BC,OAD0B,aAC1BA,OAD0B;AAAA,MACjBC,KADiB,aACjBA,KADiB;AAAA,MACVC,QADU,aACVA,QADU;AAAA,MACAC,OADA,aACAA,OADA;;AAE1C,MAAMC,QAAQ,GAAGR,SAAS,CAACG,MAAD,EAAS,IAAT,EAAe,UAACM,IAAD;AAAA,WAAUA,IAAI,CAACD,QAAf;AAAA,GAAf,CAA1B;AAEA,SAAO;AACN;AACAA,IAAAA,QAAQ,EAARA,QAFM;AAGNJ,IAAAA,OAAO,EAAPA,OAHM;AAINC,IAAAA,KAAK,EAALA,KAJM;AAMN;AACAC,IAAAA,QAAQ,EAARA,QAPM;AAQNC,IAAAA,OAAO,EAAPA;AARM,GAAP;AAUA,CAdM","sourcesContent":["import { useQuery, useResult } from \"@vue/apollo-composable\";\nimport messagesQuery from \"../graphql/queries/messages.gql\";\n\nexport const useMessagesQuery = function() {\n\tconst { result, loading, error, onResult, onError } = useQuery(messagesQuery);\n\tconst messages = useResult(result, null, (data) => data.messages);\n\n\treturn {\n\t\t// States\n\t\tmessages,\n\t\tloading,\n\t\terror,\n\n\t\t// Event hooks\n\t\tonResult,\n\t\tonError,\n\t};\n};\n"]}]}